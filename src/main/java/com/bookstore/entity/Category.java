package com.bookstore.entity;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Category: 카테고리 정보를 담고 있는 엔티티 클래스
 * generated by hbm2java
 */
@Entity
@Table(name = "category", catalog = "bookstoredb") // "category" 테이블과 매핑되는 엔티티
//@NamedQueries 어노테이션을 사용하여 Category 엔티티 클래스에서 여러 명명된 쿼리를 정의합니다.
@NamedQueries({
 // Category 엔티티에서 모든 카테고리를 이름 순서대로 가져오는 쿼리를 정의합니다.
 @NamedQuery(name = "Category.findAll", query = "SELECT c FROM Category c ORDER BY c.name"),
 
 // Category 엔티티에서 모든 카테고리의 수를 가져오는 쿼리를 정의합니다.
 @NamedQuery(name = "Category.countAll", query = "SELECT COUNT(*) FROM Category"),
 
 // Category 엔티티에서 이름으로 카테고리를 찾는 쿼리를 정의합니다.
 @NamedQuery(name = "Category.findByName", query = "SELECT c FROM Category c WHERE c.name = :name")
})

public class Category implements java.io.Serializable {

	private Integer categoryId; // 카테고리의 고유 식별자
	private String name; // 카테고리 이름
	private Set<Book> books = new HashSet<Book>(0); // 카테고리에 속한 책들의 집합

	public Category() {
		// 기본 생성자
	}

	// 카테고리 이름으로 생성자를 만듭니다.
	public Category(String name) {
		this.name = name;
	}

	// 카테고리 이름과 속한 책들을 가진 생성자를 만듭니다.
	public Category(String name, Set<Book> books) {
		this.name = name;
		this.books = books;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "category_id", unique = true, nullable = false)
	public Integer getCategoryId() {
		return this.categoryId;
	}

	public void setCategoryId(Integer categoryId) {
		this.categoryId = categoryId;
	}

	@Column(name = "name", nullable = false, length = 30)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
	public Set<Book> getBooks() {
		return this.books;
	}

	public void setBooks(Set<Book> books) {
		this.books = books;
	}

}
